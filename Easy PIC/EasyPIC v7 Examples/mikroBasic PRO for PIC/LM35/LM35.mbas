' *
' * Project name:
'     LM35 Sensor (Temperature measurement)
' * Copyright:
'     (c) Mikroelektronika, 2011.
' * Revision History:
'     20110929:
'       - initial release (FJ);
' * Description:
'      A simple example of using the LM35 sensor.
'      Temperature is displayed on LCD.
' * Test configuration:
'     MCU:             PIC18F45K22
'                      http://ww1.microchip.com/downloads/en/DeviceDoc/41412D.pdf
'     Dev.Board:       EasyPIC7 - ac:LM35
'                      http://www.mikroe.com/eng/products/view/757/easypic-v7-development-system/
'     Oscillator:      HS-PLL 32.0000 MHz, 8.0000 MHz Crystal
'     Ext. Modules:    LM35 Sensor, Character Lcd 2x16
'                      http://www.mikroe.com/eng/products/view/277/various-components/
'     SW:              mikroBasic PRO for PIC
'                      http://www.mikroe.com/eng/products/view/9/mikrobasic-pro-for-pic/
' * NOTES:
'     - Put LM35 sensor in proper position and place jumper J25 in the left position (RE1). (board specific)
'     - Turn on Lcd backlight switch SW4.6. (board specific)
' *

program LM35_Sensor

' Lcd module connections
dim LCD_RS as sbit at LATB4_bit
    LCD_EN as sbit at LATB5_bit
    LCD_D4 as sbit at LATB0_bit
    LCD_D5 as sbit at LATB1_bit
    LCD_D6 as sbit at LATB2_bit
    LCD_D7 as sbit at LATB3_bit

dim LCD_RS_Direction as sbit at TRISB4_bit
    LCD_EN_Direction as sbit at TRISB5_bit
    LCD_D4_Direction as sbit at TRISB0_bit
    LCD_D5_Direction as sbit at TRISB1_bit
    LCD_D6_Direction as sbit at TRISB2_bit
    LCD_D7_Direction as sbit at TRISB3_bit
' End Lcd module connections

'  Set VREF according to the voltage reference :
'  5.00 - power supply jumper set to 5V position (reference = 5V)
'  3.30 - power supply jumper set to 3.3V position (reference = 3.3V)
const VREF as byte  = 3.30

dim temp_res as word
dim temp as float
dim txt as string[15]

main:  
  ANSELB = 0                       ' Configure PORTB pins as digital
  ANSELE = 0x02                    ' Configure RE1 pin as analog
  TRISE1_bit = 1                   ' Configure RE1 pin as input

  ADC_Init()                       ' Initialize ADC

  Lcd_Init()                       ' Initialize LCD
  Lcd_Cmd(_LCD_CLEAR)              ' Clear display
  Lcd_Cmd(_LCD_CURSOR_OFF)         ' Cursor off

  Lcd_Out(1, 1, "Temperature :")
  Lcd_Chr(2,8,223)                 ' Different LCD displays have different
                                   '   char code for degree
  Lcd_Chr(2,9,"C")                 ' Display "C" for Celsius

  temp_res = 0
  while TRUE
    temp_res = ADC_Get_Sample(6)       ' Get 10-bit results of AD conversion
    temp = (temp_res * VREF)/10.240    ' Calculate temperature in Celsuis
                                       '   change Vref constant according
                                       '    to the power supply voltage
    FloatToStr(temp, txt)              ' Convert temperature to string
    txt[4] = 0
    Lcd_Out(2,3,txt)                   ' Write string in second row
    Delay_ms(300)
  wend
end.