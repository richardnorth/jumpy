' *
' * Project name:
'     Lcd_Test (Demonstration of the LCD library routines)
' * Copyright:
'     (c) Mikroelektronika, 2011.
' * Revision History:
'     20110929:
'       - initial release (FJ);
' * Description:
'     This code demonstrates how to use LCD 4-bit library. LCD is first
'     initialized, then some text is written, then the text is moved.
' * Test configuration:
'     MCU:             PIC18F45K22
'                      http://ww1.microchip.com/downloads/en/DeviceDoc/41412D.pdf
'     Dev.Board:       EasyPIC7 - ac:LCD
'                      http://www.mikroe.com/eng/products/view/757/easypic-v7-development-system/
'     Oscillator:      HS-PLL 32.0000 MHz, 8.0000 MHz Crystal
'     Ext. Modules:    Character Lcd 2x16
'                      http://www.mikroe.com/eng/products/view/277/various-components/
'     SW:              mikroBasic PRO for PIC
'                      http://www.mikroe.com/eng/products/view/9/mikrobasic-pro-for-pic/
' * NOTES:
'     - Turn on Lcd backlight switch SW4.6. (board specific)
' *

program Lcd

' Lcd module connections
dim LCD_RS as sbit at LATB4_bit
    LCD_EN as sbit at LATB5_bit
    LCD_D4 as sbit at LATB0_bit
    LCD_D5 as sbit at LATB1_bit
    LCD_D6 as sbit at LATB2_bit
    LCD_D7 as sbit at LATB3_bit

dim LCD_RS_Direction as sbit at TRISB4_bit
    LCD_EN_Direction as sbit at TRISB5_bit
    LCD_D4_Direction as sbit at TRISB0_bit
    LCD_D5_Direction as sbit at TRISB1_bit
    LCD_D6_Direction as sbit at TRISB2_bit
    LCD_D7_Direction as sbit at TRISB3_bit
' End Lcd module connections

dim txt1 as char[16]
    txt2 as char[9]
    txt3 as char[8]
    txt4 as char[7]
    i    as byte                 ' Loop variable

sub procedure Move_Delay()       ' Function used for text moving
  Delay_ms(500)                  ' You can change the moving speed here
end sub

main:
  ANSELB = 0                     ' Configure PORTB pins as digital

  txt1 = "mikroElektronika"
  txt2 = "EasyPIC7"
  txt3 = "Lcd4bit"
  txt4 = "example"

  Lcd_Init()                     ' Initialize Lcd
  Lcd_Cmd(_LCD_CLEAR)            ' Clear display
  Lcd_Cmd(_LCD_CURSOR_OFF)       ' Cursor off
  Lcd_Out(1,6,txt3)              ' Write text in first row
  Lcd_Out(2,6,txt4)              ' Write text in second row
  Delay_ms(2000)
  Lcd_Cmd(_LCD_CLEAR)            ' Clear display

  Lcd_Out(1,1,txt1)              ' Write text in first row
  Lcd_Out(2,5,txt2)              ' Write text in second row
  Delay_ms(500)

  ' Moving text
  for i=0 to 3                   ' Move text to the right 4 times
    Lcd_Cmd(_LCD_SHIFT_RIGHT)
    Move_Delay()
  next i

  while TRUE                     ' Endless loop
    for i=0 to 7                 ' Move text to the left 8 times
      Lcd_Cmd(_LCD_SHIFT_LEFT)
      Move_Delay()
    next i

    for i=0 to 7                 ' Move text to the right 8 times
      Lcd_Cmd(_LCD_SHIFT_RIGHT)
      Move_Delay()
    next i
  wend
end.