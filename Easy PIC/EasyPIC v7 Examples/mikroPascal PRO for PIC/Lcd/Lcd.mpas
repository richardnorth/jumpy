{*
 * Project name:
     Lcd_Test (Demonstration of the LCD library routines)
 * Copyright:
     (c) Mikroelektronika, 2011.
 * Revision History:
     20110929:
       - initial release (FJ);
 * Description:
     This code demonstrates how to use LCD 4-bit library. LCD is first
     initialized, then some text is written, then the text is moved.
 * Test configuration:
     MCU:             PIC18F45K22
                      http://ww1.microchip.com/downloads/en/DeviceDoc/41412D.pdf
     Dev.Board:       EasyPIC7 - ac:LCD
                      http://www.mikroe.com/eng/products/view/757/easypic-v7-development-system/
     Oscillator:      HS-PLL 32.0000 MHz, 8.0000 MHz Crystal
     Ext. Modules:    Character Lcd 2x16
                      http://www.mikroe.com/eng/products/view/277/various-components/
     SW:              mikroPascal PRO for PIC
                      http://www.mikroe.com/eng/products/view/10/mikropascal-pro-for-pic/
 * NOTES:
     - Turn on Lcd backlight switch SW4.6. (board specific)
 *}

program  Lcd_Test;

// LCD module connections
var LCD_RS : sbit  at LATB4_bit;
var LCD_EN : sbit  at LATB5_bit;
var LCD_D4 : sbit  at LATB0_bit;
var LCD_D5 : sbit  at LATB1_bit;
var LCD_D6 : sbit  at LATB2_bit;
var LCD_D7 : sbit  at LATB3_bit;

var LCD_RS_Direction : sbit at TRISB4_bit;
var LCD_EN_Direction : sbit at TRISB5_bit;
var LCD_D4_Direction : sbit at TRISB0_bit;
var LCD_D5_Direction : sbit at TRISB1_bit;
var LCD_D6_Direction : sbit at TRISB2_bit;
var LCD_D7_Direction : sbit at TRISB3_bit;
// End LCD module connections

var txt1 : array[16] of char;
    txt2 : array[9]  of char;
    txt3 : array[8]  of char;
    txt4 : array[7]  of char;
    i    : byte;                       // Loop variable

procedure Move_Delay();                // Function used for text moving
  begin
    Delay_ms(500);                     // You can change the moving speed here
  end;

  begin
    ANSELB := 0;                       // Configure PORTB pins as digital

    txt1 := 'mikroElektronika';
    txt2 := 'EasyPIC7';
    txt3 := 'Lcd4bit';
    txt4 := 'example';
    
    Lcd_Init();                        // Initialize LCD
    Lcd_Cmd(_LCD_CLEAR);               // Clear display
    Lcd_Cmd(_LCD_CURSOR_OFF);          // Cursor off
    LCD_Out(1,6,txt3);                 // Write text in first row
    LCD_Out(2,6,txt4);                 // Write text in second row
    Delay_ms(2000);
    Lcd_Cmd(_LCD_CLEAR);               // Clear display

    LCD_Out(1,1,txt1);                 // Write text in first row
    Lcd_Out(2,5,txt2);                 // Write text in second row
    Delay_ms(500);

    // Moving text
    for i:=0 to 3 do                   // Move text to the right 4 times
      begin
        Lcd_Cmd(_LCD_SHIFT_RIGHT);
        Move_Delay();
      end;

    while TRUE do                      // Endless loop
      begin
        for i:=0 to 7 do               // Move text to the left 8 times
          begin
            Lcd_Cmd(_LCD_SHIFT_LEFT);
            Move_Delay();
          end;

        for i:=0 to 7 do               // Move text to the right 8 times
          begin
            Lcd_Cmd(_LCD_SHIFT_RIGHT);
            Move_Delay();
          end;

      end;
  end.