{*
 * Project name:
     Button (Demonstration of using Button Library)
 * Copyright:
     (c) Mikroelektronika, 2011.
 * Revision History:
     20110929:
       - initial release (FJ);
 * Description:
     This program demonstrates usage on-board button as PORTB input.
     On every RB0 one-to-zero transition PORTC is inverted.
 * Test configuration:
     MCU:             PIC18F45K22
                      http://ww1.microchip.com/downloads/en/DeviceDoc/41412D.pdf
     Dev.Board:       EasyPIC7 - ac:Buttons
                      http://www.mikroe.com/eng/products/view/757/easypic-v7-development-system/
     Oscillator:      HS-PLL 32.0000 MHz, 8.0000 MHz Crystal
     Ext. Modules:    None.
     SW:              mikroPascal PRO for PIC
                      http://www.mikroe.com/eng/products/view/10/mikropascal-pro-for-pic/
 * NOTES:
     - Turn ON the PORTC LEDs at SW3.3.
     - Put button jumper (J17) into VCC position and pull-down PORTB.
 *}

program Button_Test;

var oldstate : byte;

begin
  ANSELB := 0;            // Configure PORTB pins as digital
  ANSELC := 0;            // Configure PORTC pins as digital

  TRISB0_bit := 1;        // set RB0 pin as input

  TRISC := 0x00;          // Configure PORTC as output
  LATC := 0xAA;           // Initial PORTC value

  oldstate := 0;

  while TRUE do
    begin
      if (Button(PORTB, 0, 1, 1)) then                     // detect logical one on RB0 pin
        oldstate := 1;
      if (oldstate and Button(PORTB, 0, 1, 0)) then
        begin                                              // detect one-to-zero transition on RB0 pin
          LATC := not LATC;
          oldstate := 0;
        end;
    end;                                                   // endless loop
end.